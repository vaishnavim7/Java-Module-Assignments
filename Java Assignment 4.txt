33.	Write a program to demonstrate functionalities of this keyword in java. 

import java.util.Scanner;
class Student{
	private int rno;
	private String name;
	
	void setData(int rno, String name)
	{
		this.rno = rno;
		this.name = name;
	}
	void showData()
	{
		System.out.println("Student Roll No = "+rno+" Name = "+name);
	}
}

public class StudentDemoThis{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter Student Roll No and Name :");
		int roll = sc.nextInt();
		String nm = sc.next();
		
		Student obj = new Student();
		obj.setData(roll, nm);
		obj.showData();
		
	}	
}

-----------------------------------------------------------------------------------------------------------------
34.	Create a class Circle that has two data members, one to store the radius and another to store area and 
three methods first init() method to input radius from user, second calculateArea() method to 
calculate area of circle and third display() method to display values of radius and area. 
Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and 
display() methods.

import java.util.Scanner;
class Circle{
	private int radius;
	private float area;
	
	Scanner sc = new Scanner(System.in);
	
	void init()
	{
		System.out.println("Enter the radius of circle :");
		radius = sc.nextInt();
	}
	void calculateArea()
	{
		area = (float)(3.14 * (radius * radius));
	}
	void display()
	{
		System.out.println("Radius of circle = "+radius+" Area of circle = "+area);
	}
}

public class CircleDemo{
	public static void main(String[] args)
	{
		Circle obj = new Circle();
		obj.init();
		obj.calculateArea();
		obj.display();
	}	
}
-----------------------------------------------------------------------------------------------------------------
35.	Create a class MathOperation that has four static methods. 
add() method that takes two integer numbers as parameter and returns the sum of the numbers. 
subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. 
multiply() method that takes two integer numbers as parameter and returns the product. 
power() method that takes two integer numbers as parameter and returns the power of first number to second number. 
Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of 
MathOperation class by providing entered numbers and prints the return values of every method.

import java.util.Scanner;
class MathOperation{
	
	static int add(int n1, int n2)
	{
		int sum;
		sum = n1 + n2;
		return sum;
	}
	
	static int subtract(int n1, int n2)
	{
		int subtract;
		subtract = n1 - n2;
		return subtract;
	}
	
	static int multiply(int n1, int n2)
	{
		int multiply;
		multiply = n1 * n2;
		return multiply;
	}
	
	static int power(int n1, int n2)
	{
		int power = 1;
		for(int i = 1; i<=n2; i++)
		{
			power = power * n1;
		}
		return power;
	}

}

public class MathOptn{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter two numbers :");
		int n1 = sc.nextInt();
		int n2 = sc.nextInt();
		
		MathOperation obj = new MathOperation();
		System.out.println("add = :"+obj.add(n1, n2));
		System.out.println("subtract = :"+obj.subtract(n1, n2));
		System.out.println("multiply = :"+obj.multiply(n1, n2));
		System.out.println("power = :"+obj.power(n1, n2));
		
		
	}	
}

-----------------------------------------------------------------------------------------------------------------
36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following 
arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 

import java.util.Scanner;

class MathOp{ 
	private int m1;
	private float m2;
	private int m3;
	private double m4;
	
	void multiply(int n1, int n2)
	{
		//int m1;
		m1 = n1 * n2;
	}
		
	void multiply(float n1, float n2, float n3)
	{
		//float m2;
		m2 = n1 * n2 * n3;	
	}
		
	void multiply(int ar[])
	{
		//int m3 = 0;
		m3 = 1;
		for(int i = 0; i< ar.length; i++)
		{
			m3 = m3 * ar[i];
		}
	}
		
	void multiply(double n1, int n2)
	{
		//double m4;
		m4 = n1 * n2;
	}
	void result(){
		System.out.println("A. two integers multiplication = "+m1);
		System.out.println("B. three floats multiplication = "+m2);
		System.out.println("C. all elements of array multiplication = "+m3);
		System.out.println("D. one double and one integer multiplication = "+m4);
	}
}

class MathOperation36{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the 2 integer type number: ");
		int num1 = sc.nextInt();
		int num2 = sc.nextInt();
		
		System.out.println("Enter the 3 float type number: ");
		float num3 = sc.nextFloat();
		float num4 = sc.nextFloat();
		float num5 = sc.nextFloat();
		
		System.out.println("Enter the size of integer array: ");
		int s = sc.nextInt();
		int arr[] = new int[s];
		System.out.println("Enter the "+s+" elements in array : ");
		for(int i = 0; i<arr.length; i++)
		{
			arr[i] = sc.nextInt();
		}
		
		System.out.println("Enter the 1 double type and 1 integer type number: ");
		double num6 = sc.nextDouble();
		int num7 = sc.nextInt();
		
		/*================================================*/
		MathOp m = new MathOp();
		m.multiply(num1, num2);
		m.multiply(num3, num4, num5);
		m.multiply(arr);
		m.multiply(num6, num7);
		m.result();
	}
}

-----------------------------------------------------------------------------------------------------------------
37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by 
creating Person object and calling methods.

import java.util.Scanner;

class Person{
	private int age;
	private String name;
	void setData(int a, String n)
	{
		age = a;
		name = n;
	}
	void displayData()
	{
		System.out.println("Person Age : "+age);
		System.out.println("Person Name : "+name);
	}
}
class PersonDemo37{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		//System.out.println("Enter the Person Age : ");
		//int a = sc.nextInt();
		int a = 18;
		System.out.println("Age of Person is : ");
		System.out.println(a);
		System.out.println("Enter the Person Name : ");
		//sc.nextLine();
		String n = sc.nextLine();
		//String n = sc.next();
		
		Person p = new Person();
		p.setData(a, n);
		p.displayData();
	}
}

-----------------------------------------------------------------------------------------------------------------
38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to 
display no. of employees and total of their salaries.

import java.util.Scanner;

class Employee{
	private static int empNo = 100;
	private int salary;
	private static int totalSalary = 0;
	private static int count = 0;
	
	void Employee(int sal)
	{
		empNo++;
		salary = sal;
		count++;
	}
	
	void showData()
	{
		System.out.println("Employee ID : "+empNo);
		System.out.println("Employee Salary : "+salary);
	}
	
	void setTotal()
	{
		totalSalary = totalSalary + salary;
	}
	
	void showTotalSal(){
		System.out.println("Total Salary of "+count+" Employees is "+totalSalary);
	}
}

class EmployeeDemo38{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter number of Employee : ");
		int n = sc.nextInt();
		
		for(int i = 1; i<=n; i++)
		{
			System.out.println("Enter the Employee "+i+" Salary : ");
			int sal = sc.nextInt();
			Employee e1 = new Employee();
			e1.Employee(sal);
			e1.showData();
			e1.setTotal();
			e1.showTotalSal();
		}
	}
}

-----------------------------------------------------------------------------------------------------------------
39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes 
values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return 
total amount spent on all products. ( amount spent on single product = price of product * quantity of product )

import java.util.Scanner;

class Product{
	private int pid;
	private int price;
	private int quantity;
	
	void Product(int pid, int price, int quantity)
	{ 
		this.pid = pid;
		this.price = price;
		this.quantity = quantity;
	}
	
	static void HighPrice(Product[] ar)
	{
		Product max = ar[0];
		for(int i = 0; i<ar.length; i++)
		{
			if(ar[i].price > max.price)
			{
				max = ar[i];
			}
		}
		System.out.println("Product ID : "+max.pid+" Highest Product Price : "+max.price);
	}
	
	static void TotalAmount(Product[] p)
	{
		int amount = 0;
		for(int i = 0; i<p.length; i++)
		{
			amount = amount + (p[i].price*p[i].quantity);
		}
		System.out.println("Total Product Amount : "+amount);
	}
	
	void show()
	{
		System.out.println("Product ID : "+pid);
		System.out.println("Product Price : "+price);
		System.out.println("Product Quantity : "+quantity);
	}
}

class ProductDemo39{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		Product pd[] = new Product[5];
		
		for(int i = 0; i<pd.length; i++)
		{
			System.out.println("Enter Product ID : ");
			int pi = sc.nextInt();
			System.out.println("Enter Product Price : ");
			int pr = sc.nextInt();
			System.out.println("Enter Product Quantity : ");
			int qnt = sc.nextInt();
			
			Product op = new Product();
			op.Product(pi, pr, qnt);
			pd[i] = op;
		}
		
		for(Product ar : pd)
		{
			ar.show();
		}
		
		Product.HighPrice(pd);
		Product.TotalAmount(pd);
	}
}


-----------------------------------------------------------------------------------------------------------------
40.	Create a class Student having data members name, roll no., age and score. 
Write a program to accept 10 records of student and store them in an array. 
And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].

import java.util.Scanner;

class Student{
	private String name;
	private int rollno;
	private int age;
	private int score;
	
	Student(String name, int rollno, int age, int score)
	{
		this.name = name;
		this.rollno = rollno;
		this.age = age;
		this.score = score;
	}

	static void studentScore(Student st[])
	{
		System.out.println("Student Score between 0 to 50 :");
		for(int i = 0; i<st.length; i++)
		{
			if(st[i].score >= 0 && st[i].score < 50)
			{
				//System.out.println(Student "+st[i].name+" Roll No "+st[i].rollno+" Score is "+st[i].score);
				st[i].showData();
			}
		}
		
		System.out.println("Student Score between 50 to 65 :");
		for(int i = 0; i<st.length; i++)
		{
			if(st[i].score >= 50 && st[i].score < 65)
			{
				//System.out.println(Student "+st[i].name+" Roll No "+st[i].rollno+" Score is "+st[i].score);
				st[i].showData();
			}
		}
		
		System.out.println("Student Score between 65 to 80 :");
		for(int i = 0; i<st.length; i++)
		{
			if(st[i].score >= 65 && st[i].score < 80)
			{
				//System.out.println("Student "+st[i].name+" Roll No "+st[i].rollno+" Score is "+st[i].score);
				st[i].showData();
			}
		}
		
		System.out.println("Student Score between 80 to 100 :");
		for(int i = 0; i<st.length; i++)
		{
			if(st[i].score >= 80 && st[i].score <= 100)
			{
				//System.out.println("Student "+st[i].name+" Roll No "+st[i].rollno+" Score is "+st[i].score);
				st[i].showData();
			}
		}
	}
	
	void showData()
	{
		System.out.println("Student Name :"+name);
		System.out.println("Student Roll No :"+rollno);
		System.out.println("Student Age :"+age);
		System.out.println("Student Score :"+score);
	}
}

class StudentDemo40{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		
		Student[] s = new Student[4];
		System.out.println("Enter "+s.length+" Student Data :");
		for(int i = 0; i<s.length; i++)
		{
			System.out.println("Enter Student Name :");
			String n = sc.next();
			System.out.println("Enter Student Roll No :");
			int rn = sc.nextInt();
			System.out.println("Enter Student Age :");
			int ag = sc.nextInt();
			System.out.println("Enter Student Score :");
			int sr = sc.nextInt();
			
			Student std = new Student(n, rn, ag, sr);
			//std.Student(n, rn, ag, sr);
			s[i] = std;
		}
		/*
		for(Student ar : s)
		{
			ar.showData();
		}
		*/
		Student.studentScore(s);
		
	}
}

-----------------------------------------------------------------------------------------------------------------
41.	Write a program to demonstrate this() construct functionality.

/* 41.	Write a program to demonstrate this() construct functionality. */

import java.util.Scanner;

class PersonA
{
	private String name;
	private int age;
	
	PersonA()
	{
		System.out.println("Person Details :");
	}
	
	PersonA(String name, int age)
	{
		this();
		this.name = name;
		this.age = age;
	}
	
	void displayData()
	{
		System.out.println("Person Name :"+name);
		System.out.println("Person Age :"+age);
	}
}
class PersonB extends PersonA
{
	private int sal;
	PersonB(String name, int age, int sal)
	{
		super(name, age);
		this.sal = sal;
		
	}
	void displayData()
	{
		super.displayData();
		System.out.println("Person Name :"+sal);
	}
	
}

class ThisDemo41{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Person Name :");
		String n = sc.next();
		System.out.println("Enter Person Age :");
		int a = sc.nextInt();
		System.out.println("Enter Person Salary :");
		int s = sc.nextInt();
		
		PersonB obj = new PersonB(n, a, s);
		obj.displayData();
	}
}

-----------------------------------------------------------------------------------------------------------------
42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length 
and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate 
the whole number of tiles needed to cover the floor completely.

-----------------------------------------------------------------------------------------------------------------
43.	Create a class OneBHK with instance variables roomArea, hallArea and price. 
Then create default constructor that initializes instance variables with some values and 
a parameterized constructor that takes values for all instance variables and stores them in instance variables. 
Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and 
a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and 
a parameterized constructor to take the values for initialization of all instance variables. 
Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information 
using show method. Also print total amount of all flats. 
